package platform

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"boyi/pkg/delivery/graph/view"
	"context"
	"fmt"
)

// CreateEvent is the resolver for the createEvent field.
func (r *mutationResolver) CreateEvent(ctx context.Context, in view.EventCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateEvent - createEvent"))
}

// UpdateEvent is the resolver for the updateEvent field.
func (r *mutationResolver) UpdateEvent(ctx context.Context, filter view.EventFilterInput, in view.EventUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateEvent - updateEvent"))
}

// DeleteEvent is the resolver for the deleteEvent field.
func (r *mutationResolver) DeleteEvent(ctx context.Context, filter view.EventFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteEvent - deleteEvent"))
}

// ListEvent is the resolver for the listEvent field.
func (r *queryResolver) ListEvent(ctx context.Context, filter view.EventFilterInput, pagination *view.PaginationInput) (*view.ListEventResp, error) {
	panic(fmt.Errorf("not implemented: ListEvent - listEvent"))
}

// ListHistoryEvent is the resolver for the listHistoryEvent field.
func (r *queryResolver) ListHistoryEvent(ctx context.Context, filter view.EventFilterInput, pagination *view.PaginationInput) (*view.ListEventResp, error) {
	panic(fmt.Errorf("not implemented: ListHistoryEvent - listHistoryEvent"))
}
