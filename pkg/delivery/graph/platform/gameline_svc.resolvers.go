package platform

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"boyi/pkg/delivery/graph/view"
	"context"
	"fmt"
)

// CreateSystemLine is the resolver for the createSystemLine field.
func (r *mutationResolver) CreateSystemLine(ctx context.Context, in view.SystemLineCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateSystemLine - createSystemLine"))
}

// UpdateSystemLine is the resolver for the updateSystemLine field.
func (r *mutationResolver) UpdateSystemLine(ctx context.Context, filter view.SystemLineFilterInput, in view.SystemLineUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateSystemLine - updateSystemLine"))
}

// DeleteSystemLine is the resolver for the deleteSystemLine field.
func (r *mutationResolver) DeleteSystemLine(ctx context.Context, filter view.SystemLineFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteSystemLine - deleteSystemLine"))
}

// CreateMerchantLine is the resolver for the createMerchantLine field.
func (r *mutationResolver) CreateMerchantLine(ctx context.Context, in view.MerchantLineCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateMerchantLine - createMerchantLine"))
}

// UpdateMerchantLine is the resolver for the updateMerchantLine field.
func (r *mutationResolver) UpdateMerchantLine(ctx context.Context, filter view.MerchantLineFilterInput, in view.MerchantLineUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateMerchantLine - updateMerchantLine"))
}

// DeleteMerchantLine is the resolver for the deleteMerchantLine field.
func (r *mutationResolver) DeleteMerchantLine(ctx context.Context, filter view.MerchantLineFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteMerchantLine - deleteMerchantLine"))
}

// CreateLineRent is the resolver for the createLineRent field.
func (r *mutationResolver) CreateLineRent(ctx context.Context, in view.LineRentCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateLineRent - createLineRent"))
}

// UpdateLineRent is the resolver for the updateLineRent field.
func (r *mutationResolver) UpdateLineRent(ctx context.Context, filter view.LineRentFilterInput, in view.LineRentUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateLineRent - updateLineRent"))
}

// DeleteLineRent is the resolver for the deleteLineRent field.
func (r *mutationResolver) DeleteLineRent(ctx context.Context, filter view.LineRentFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteLineRent - deleteLineRent"))
}

// CreateLineRate is the resolver for the createLineRate field.
func (r *mutationResolver) CreateLineRate(ctx context.Context, in view.LineRateCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateLineRate - createLineRate"))
}

// UpdateLineRate is the resolver for the updateLineRate field.
func (r *mutationResolver) UpdateLineRate(ctx context.Context, filter view.LineRateFilterInput, in view.LineRateUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateLineRate - updateLineRate"))
}

// DeleteLineRate is the resolver for the deleteLineRate field.
func (r *mutationResolver) DeleteLineRate(ctx context.Context, filter view.LineRateFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteLineRate - deleteLineRate"))
}

// CreateGame is the resolver for the createGame field.
func (r *mutationResolver) CreateGame(ctx context.Context, in view.GameCreateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: CreateGame - createGame"))
}

// UpdateGame is the resolver for the updateGame field.
func (r *mutationResolver) UpdateGame(ctx context.Context, filter view.GameFilterInput, in view.GameUpdateInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: UpdateGame - updateGame"))
}

// DeleteGame is the resolver for the deleteGame field.
func (r *mutationResolver) DeleteGame(ctx context.Context, filter view.GameFilterInput) (uint64, error) {
	panic(fmt.Errorf("not implemented: DeleteGame - deleteGame"))
}

// ListSystemLine is the resolver for the listSystemLine field.
func (r *queryResolver) ListSystemLine(ctx context.Context, filter *view.SystemLineFilterInput, pagination *view.PaginationInput) (*view.ListSystemLineResp, error) {
	panic(fmt.Errorf("not implemented: ListSystemLine - listSystemLine"))
}

// ListMerchantLine is the resolver for the listMerchantLine field.
func (r *queryResolver) ListMerchantLine(ctx context.Context, filter *view.MerchantLineFilterInput, pagination *view.PaginationInput) (*view.ListMerchantLineResp, error) {
	panic(fmt.Errorf("not implemented: ListMerchantLine - listMerchantLine"))
}

// ListLineRent is the resolver for the listLineRent field.
func (r *queryResolver) ListLineRent(ctx context.Context, filter *view.LineRentFilterInput, pagination *view.PaginationInput) (*view.ListLineRentResp, error) {
	panic(fmt.Errorf("not implemented: ListLineRent - listLineRent"))
}

// ListLineRate is the resolver for the listLineRate field.
func (r *queryResolver) ListLineRate(ctx context.Context, filter *view.LineRateFilterInput, pagination *view.PaginationInput) (*view.ListLineRateResp, error) {
	panic(fmt.Errorf("not implemented: ListLineRate - listLineRate"))
}

// ListLineRateHistory is the resolver for the listLineRateHistory field.
func (r *queryResolver) ListLineRateHistory(ctx context.Context, filter *view.LineRateHistoryFilterInput, pagination *view.PaginationInput) (*view.ListLineRateHistoryResp, error) {
	panic(fmt.Errorf("not implemented: ListLineRateHistory - listLineRateHistory"))
}

// ListGame is the resolver for the listGame field.
func (r *queryResolver) ListGame(ctx context.Context, filter *view.GameFilterInput, pagination *view.PaginationInput) (*view.ListGameResp, error) {
	panic(fmt.Errorf("not implemented: ListGame - listGame"))
}
