package platform

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"boyi/pkg/delivery/graph/view"
	"context"
	"fmt"
)

// ListHubClients is the resolver for the listHubClients field.
func (r *queryResolver) ListHubClients(ctx context.Context) ([]*view.HubClient, error) {
	userClients := r.hub.GetAllClients()

	out := make([]*view.HubClient, 0, len(userClients))
	for i := range userClients {
		var c view.HubClient
		c.UserID = userClients[i].UserID
		c.Devices = make([]*view.HubDevice, 0, len(userClients[i].Devices))
		for j := range userClients[i].Devices {
			var d view.HubDevice
			d.DeviceUID = userClients[i].Devices[j].DeviceUID
			d.Token = userClients[i].Devices[j].Token
			c.Devices = append(c.Devices, &d)
		}

		out = append(out, &c)
	}

	return out, nil
}

// ReceiveMessage is the resolver for the receiveMessage field.
func (r *subscriptionResolver) ReceiveMessage(ctx context.Context, userAuth view.UserAuth) (<-chan string, error) {
	panic(fmt.Errorf("not implemented: ReceiveMessage - receiveMessage"))
}
