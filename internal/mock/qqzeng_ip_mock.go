// Code generated by MockGen. DO NOT EDIT.
// Source: ./vendor/boyi/pkg/infra/qqzeng_ip/qqzeng_ip.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPSearch is a mock of IPSearch interface.
type MockIPSearch struct {
	ctrl     *gomock.Controller
	recorder *MockIPSearchMockRecorder
}

// MockIPSearchMockRecorder is the mock recorder for MockIPSearch.
type MockIPSearchMockRecorder struct {
	mock *MockIPSearch
}

// NewMockIPSearch creates a new mock instance.
func NewMockIPSearch(ctrl *gomock.Controller) *MockIPSearch {
	mock := &MockIPSearch{ctrl: ctrl}
	mock.recorder = &MockIPSearchMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPSearch) EXPECT() *MockIPSearchMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIPSearch) Get(ip string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ip)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIPSearchMockRecorder) Get(ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPSearch)(nil).Get), ip)
}
